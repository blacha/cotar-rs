name: ci
on:
  pull_request:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - run: cargo fmt --all -- --check
      
      - name: Build
        run: cargo build --release --locked --target x86_64-unknown-linux-gnu --features mbtiles

      - name: Test  
        run: cargo test

  github_build:
    name: Build CLI release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, name: linux-x64 }
          - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu, name: linux-arm64 }
          - { os: macos-latest, target: x86_64-apple-darwin, name: darwin-x64 }
          - { os: macos-latest, target: aarch64-apple-darwin, name: darwin-arm64 }

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build | Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }} --features mbtiles
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Post Build | Prepare artifacts 
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../cotar-${{ matrix.name }}.tar.gz cotar
          cd -

      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cotar-${{ matrix.name }}.tar.gz
          path: cotar-${{ matrix.name }}.tar.gz

